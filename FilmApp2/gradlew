package jakopec.mvvmroom.view;

import android.app.Activity;
import android.content.Intent;
import android.graphics.Bitmap;
import android.net.Uri;
import android.os.Bundle;
import android.os.Environment;
import android.provider.MediaStore;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.ImageView;
import android.widget.Toast;

import androidx.core.content.FileProvider;
import androidx.fragment.app.Fragment;


import com.squareup.picasso.Picasso;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;

import butterknife.BindView;
import butterknife.ButterKnife;
import butterknife.OnClick;
import jakopec.mvvmroom.R;
import jakopec.mvvmroom.viewmodel.OsobaViewModel;

public class CUDFragment extends Fragment {

    static final int SLIKANJE =1;

    private String trenutnaPutanjaSlike;

    @BindView(R.id.ime)
    EditText ime;
    @BindView(R.id.prezime)
    EditText prezime;
    @BindView(R.id.slika)
    ImageView slika;

    @BindView(R.id.novaOsoba)
    Button novaOsoba;
    @BindView(R.id.uslikaj)
    Button uslikaj;
    @BindView(R.id.promjenaOsoba)
    Button promjenaOsoba;
    @BindView(R.id.obrisiOsoba)
    Button obrisiOsoba;

    OsobaViewModel model;

    @Override
    public View onCreateView(LayoutInflater inflater, ViewGroup container,
                             Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.fragment_cud,
                container, false);
        ButterKnife.bind(this, view);
        model = ((MainActivity) getActivity()).getModel();

        if (model.getOsoba().getId() == 0) {
            definirajNovaOsoba();
            return view;
        }
        definirajPromjenaBrisanjeOsoba();

        return view;
    }

    private void definirajPromjenaBrisanjeOsoba() {
        novaOsoba.setVisibility(View.GONE);
        ime.setText(model.getOsoba().getIme());
        prezime.setText(model.getOsoba().getPrezime());


        uslikaj.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                uslikaj();
            }
        });

        promjenaOsoba.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                promjenaOsoba();
            }
        });

        obrisiOsoba.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                obrisiOsoba();
            }
        });


        if(model.getOsoba().getPutanjaSlika()==null){
            Picasso.get().load(R.drawable.nepoznato).fit().centerCrop().into(slika);
            return;
        }
        Picasso.get().load(model.getOsoba().getPutanjaSlika()).fit().centerCrop().into(slika);

    }

    private void promjenaOsoba() {
        model.getOsoba().setIme(ime.getText().toString());
        model.getOsoba().setPrezime(prezime.getText().toString());
        model.promjeniOsobu();
        nazad();
    }

    private void definirajNovaOsoba() {
        promjenaOsoba.setVisibility(View.GONE);
        obrisiOsoba.setVisibility(View.GONE);
        uslikaj.setVisibility(View.GONE);
        novaOsoba.setOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View view) {
                novaOsoba();
            }
        });
    }

    private void novaOsoba() {
        model.getOsoba().setIme(ime.getText().toString());
        model.getOsoba().setPrezime(prezime.getText().toString());
        model.dodajNovuOsobu();
        nazad();
    }

    private void obrisiOsoba() {
        model.getOsoba().setIme(ime.getText().toString());
        model.getOsoba().setPrezime(prezime.getText().toString());
        model.obrisiOsobu();
        nazad();
    }

    @OnClick(R.id.nazad)
    public void nazad() {
        ((MainActivity) getActivity()).read();
    }

    private void uslikaj() {
        Intent takePictureIntent = new Intent(MediaStore.ACTION_IMAGE_CAPTURE);
        // Ensure that there's a camera activity to handle the intent
        if (takePictureIntent.resolveActivity(getActivity().getPackageManager()) == null) {
            Toast.makeText(getActivity(), "Problem kod kreiranja slike", Toast.LENGTH_LONG).show();
            return;

        }
            // Create the File where the photo should go
            File slika = null;
            try {
                slika = kreirajDatotekuSlike();
            } catch (IOException ex) {
                Toast.makeText(getActivity(), "Problem kod kreiranja slike", Toast.LENGTH_LONG).show();
            return;
            }

            if (slika == null) {
                Toast.makeText(getActivity(), "Problem kod kreiranja slike", Toast.LENGTH_LONG).show();
                return;
            }

            Uri slikaURI = FileProvider.getUriForFile(getActivity(),
                    "jakopec.mvvmroom.provider",
                    slika);
            takePictureIntent.putExtra(MediaStore.EXTRA_OUTPUT, slikaURI);
            startActivityForResult(takePictureIntent, SLIKANJE);

    }

    @Override
    public void onActivi